//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestTemplate.Repository.EntityFramework.DBContexts.Test
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class HMLVTSDB : DbContext
    {
        //public HMLVTS()
        //    : base("name=HMLVTS")
        //{
        //}

        //constructor
        public HMLVTSDB() : base(GetConnString())
        { }

        //methods
        private static string GetConnString()
        {
            var conn = new ConnectionStringFactory();
            return conn.GetTestDBConnection();
        }
        public override int SaveChanges()
        {
            ChangeTracker.DetectChanges();
            DbContextSaveChanges.SaveChanges(((IObjectContextAdapter)this).ObjectContext);

            return base.SaveChanges();
        }

        protected override void OnModelCreating(DbModelBuilder EntityBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        //public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TS_ChildWorkOrder> TS_ChildWorkOrder { get; set; }
        public virtual DbSet<TS_ExStatus> TS_ExStatus { get; set; }
        public virtual DbSet<TS_Lock> TS_Lock { get; set; }
        public virtual DbSet<TS_MacAddress> TS_MacAddress { get; set; }
        public virtual DbSet<TS_Mutex> TS_Mutex { get; set; }
        public virtual DbSet<TS_QC_Equipment> TS_QC_Equipment { get; set; }
        public virtual DbSet<TS_Rework> TS_Rework { get; set; }
        public virtual DbSet<TS_Scrap> TS_Scrap { get; set; }
        public virtual DbSet<TS_WODispatchBand> TS_WODispatchBand { get; set; }
        public virtual DbSet<TS_WorkOrder> TS_WorkOrder { get; set; }
        public virtual DbSet<TS_WorkOrderCancel> TS_WorkOrderCancel { get; set; }
        public virtual DbSet<TS_WorkOrderCancelDetail> TS_WorkOrderCancelDetail { get; set; }
        public virtual DbSet<TS_WorkOrderExecution> TS_WorkOrderExecution { get; set; }
        public virtual DbSet<TS_WorkOrderRoute> TS_WorkOrderRoute { get; set; }
        public virtual DbSet<TS_WorkOrderRouteDispatch> TS_WorkOrderRouteDispatch { get; set; }
        public virtual DbSet<TS_Operation> TS_Operation { get; set; }
        public virtual DbSet<TS_Parameter> TS_Parameter { get; set; }
        public virtual DbSet<TS_PauseOperationReason> TS_PauseOperationReason { get; set; }
        public virtual DbSet<TS_QCDocAttachment> TS_QCDocAttachment { get; set; }
        public virtual DbSet<TS_ScrapRemark> TS_ScrapRemark { get; set; }
        public virtual DbSet<TS_SplitRemark> TS_SplitRemark { get; set; }
        public virtual DbSet<TS_TrackingRemark> TS_TrackingRemark { get; set; }
    }
}
